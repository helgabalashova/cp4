{"remainingRequest":"/Users/olyabalashova/Downloads/CS-260/cp4/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/olyabalashova/Downloads/CS-260/cp4/front-end/src/views/imageView.vue?vue&type=style&index=0&id=95030c14&scoped=true&lang=css&","dependencies":[{"path":"/Users/olyabalashova/Downloads/CS-260/cp4/front-end/src/views/imageView.vue","mtime":1586722974987},{"path":"/Users/olyabalashova/Downloads/CS-260/cp4/front-end/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/olyabalashova/Downloads/CS-260/cp4/front-end/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/olyabalashova/Downloads/CS-260/cp4/front-end/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/olyabalashova/Downloads/CS-260/cp4/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/olyabalashova/Downloads/CS-260/cp4/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouaW1hZ2UgaDIgewogIGZvbnQtc3R5bGU6IGl0YWxpYzsKICBmb250LXNpemU6IDFlbTsKfQoKLmhlYWRpbmcgewogIGRpc3BsYXk6IGZsZXg7CiAgbWFyZ2luLWJvdHRvbTogMjBweDsKICBtYXJnaW4tdG9wOiAyMHB4Owp9CgovKiBVcGxvYWRlZCBpbWFnZXMgKi8KaDIgewogICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7CiAgICBmb250LXNpemU6IDIwcHg7Cn0KCi5pbWFnZS1jb250IGltZ3sKICAgIG1heC13aWR0aDogODAlOwp9CgouZWRpdC1idXR0b24gewogIHBhZGRpbmc6IDhweCA4cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogIzJhNWQ2ODsKICBib3JkZXI6IG5vbmU7CiAgY29sb3I6IHdoaXRlOwogIGZvbnQtc2l6ZTogMTVweDsKICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogIAp9CgovKiBTdWdnZXN0aW9ucyAqLwouc3VnZ2VzdGlvbnMgewogIHdpZHRoOiAyMDBweDsKICBib3JkZXI6IDFweCBzb2xpZCAjY2NjOwp9Cgouc3VnZ2VzdGlvbiB7CiAgbWluLWhlaWdodDogMjBweDsKfQoKLnN1Z2dlc3Rpb246aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICM1QkRFRkY7CiAgY29sb3I6ICNmZmY7Cn0K"},{"version":3,"sources":["imageView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"imageView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<div class=\"admin\">\n    <div class=\"edit\">\n      <div class=\"image-cont\" v-if=\"item\">\n        <h2>{{item.title}}</h2>\n        <p></p>\n        <img :src=\"item.path\" />\n        <p>Tags: {{item.tags}} </p>\n      </div>\n      \n      <div>\n          <h2>Add Comment</h2>\n          <textarea v-model=\"addedComment\" rows=6 cols=70></textarea><br>\n          <button class=\"edit-button\" @click=\"editItem()\">Add Comment</button>\n      </div>\n      <div v-if=\"comments.length > 0\">\n          <h2>Comments</h2>\n          <p v-for=\"comment in comments\" :key=\"comment\">- {{comment}}</p>\n      </div>\n    </div>\n</div>\n</template>\n<style scoped>\n.image h2 {\n  font-style: italic;\n  font-size: 1em;\n}\n\n.heading {\n  display: flex;\n  margin-bottom: 20px;\n  margin-top: 20px;\n}\n\n/* Uploaded images */\nh2 {\n    text-transform: capitalize;\n    font-size: 20px;\n}\n\n.image-cont img{\n    max-width: 80%;\n}\n\n.edit-button {\n  padding: 8px 8px;\n  background-color: #2a5d68;\n  border: none;\n  color: white;\n  font-size: 15px;\n  text-transform: uppercase;\n  \n}\n\n/* Suggestions */\n.suggestions {\n  width: 200px;\n  border: 1px solid #ccc;\n}\n\n.suggestion {\n  min-height: 20px;\n}\n\n.suggestion:hover {\n  background-color: #5BDEFF;\n  color: #fff;\n}\n</style>\n<script>\nimport axios from 'axios';\nexport default {\n  name: 'imageView',\n  data() {\n    return {\n      addedComment: \"\",\n      comments: [],\n      item: null,\n    }\n  },\n  created() {\n      this.getComments();\n  },\n  watch: {\n    // call again the method if the route changes\n    '$route': 'getComments'\n  },\n  methods: {\n    async editItem() {\n      try {\n        await axios.put(\"/api/items/\" + this.$route.params.id, {\n          title: this.item.title,\n          tags: this.item.tags,\n          comments: this.addedComment,\n        });\n        this.addedComment = \"\";\n        this.getComments();\n      } catch (error) {\n        //console.log(error);\n      }\n    },\n    async getComments() {\n        try {\n            let result = await axios.get(\"/api/items/\" + this.$route.params.id);\n            this.item = result.data;\n            this.comments = result.data.comments;\n        } catch (error) {\n            //console.log(error);\n        }\n    },\n  },\n}\n</script>\n"]}]}